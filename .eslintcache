[{"C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\index.js":"1","C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\App.js":"2","C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\components\\Title\\index.js":"3","C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\components\\FriendCard\\index.js":"4","C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\components\\Wrapper\\index.js":"5","C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\components\\Row\\index.js":"6","C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\components\\Button\\index.js":"7"},{"size":215,"mtime":1610085784391,"results":"8","hashOfConfig":"9"},{"size":2860,"mtime":1610237846683,"results":"10","hashOfConfig":"9"},{"size":153,"mtime":1610237596796,"results":"11","hashOfConfig":"9"},{"size":830,"mtime":1610236630767,"results":"12","hashOfConfig":"9"},{"size":161,"mtime":1609749517975,"results":"13","hashOfConfig":"9"},{"size":540,"mtime":1610087964092,"results":"14","hashOfConfig":"9"},{"size":338,"mtime":1610237296337,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"7adv1t",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\index.js",[],["33","34"],"C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\App.js",["35","36","37"],"import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Row from \"./components/Row\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Button from \"./components/Button\"\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    \n  };\n  \n  baseState = {\n    friends,\n  };\n  \n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  filterByOccupation = occupation =>{\n    const friends = this.state.friends.filter(friend => friend.occupation === occupation);\n    this.setState({ friends });\n  };\n\n  sortNameColumn = name =>{\n    const friends = this.state.friends.sort(function(a, b){\n      let nameA = a.name.toUpperCase();\n      let nameB = b.name.toUpperCase();\n      if (nameA< nameB) {return -1;}\n      if (nameA> nameB) {return 1;}\n    })\n    this.setState({ friends });\n  }\n\n  sortOccupationColumn = occupation =>{\n    const friends = this.state.friends.sort(function(a, b){\n      let nameA = a.occupation.toUpperCase();\n      let nameB = b.occupation.toUpperCase();\n      if (nameA< nameB) {return -1;}\n      if (nameA> nameB) {return 1;}\n    })\n    this.setState({ friends });\n  }\n\n  sortLocationColumn = occupation =>{\n    const friends = this.state.friends.sort(function(a, b){\n      let nameA = a.location.toUpperCase();\n      let nameB = b.location.toUpperCase();\n      if (nameA< nameB) {return -1;}\n      if (nameA> nameB) {return 1;}\n    })\n    this.setState({ friends });\n  }\n\n\n  restoreFriendList = () => {\n    this.setState(this.baseState)\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Employee List</Title>\n          <br></br><p>*Click on occupation to filter by occupation</p>\n          <Button \n          restoreFriendList={this.restoreFriendList}\n          />\n        <FriendCard\n          sortNameColumn={this.sortNameColumn}\n          sortOccupationColumn={this.sortOccupationColumn}\n          sortLocationColumn={this.sortLocationColumn}\n          >\n        {this.state.friends.map(friend => (\n          <Row\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n           // image={friend.image}\n            occupation={friend.occupation}\n            filterByOccupation={this.filterByOccupation}\n            location={friend.location}\n          />\n        ))}\n        </FriendCard>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\components\\Title\\index.js",[],"C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\components\\FriendCard\\index.js",[],"C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\components\\Wrapper\\index.js",[],["38","39"],"C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\components\\Row\\index.js",[],"C:\\Users\\Sam\\homework\\react\\employeedirectory\\src\\components\\Button\\index.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":34,"column":45,"nodeType":"46","messageId":"47","endLine":34,"endColumn":53},{"ruleId":"44","severity":1,"message":"45","line":44,"column":45,"nodeType":"46","messageId":"47","endLine":44,"endColumn":53},{"ruleId":"44","severity":1,"message":"45","line":54,"column":45,"nodeType":"46","messageId":"47","endLine":54,"endColumn":53},{"ruleId":"40","replacedBy":"48"},{"ruleId":"42","replacedBy":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd",["50"],["51"],"no-global-assign","no-unsafe-negation"]